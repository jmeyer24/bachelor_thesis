source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
getwd()
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
graph
plot(graph)
graph
plot(dat_vertices[2:3],type='o',pch=20)
plot(dat_nodes[2:3],type='o',pch=20)
?graph_from_data_frame
# dat <- read.graph('graph.vim')
dat <- read.graph('graph.vim')
small_graph <- graph_from_data_frame(head(dat_edges[1:2]),vertices=dat_nodes[2:3])
dat_nodes[2:3]
dat_edges
head(dat_edges)
head(dat_nodes)
small_graph <- graph_from_data_frame(head(dat_edges[1:2]),vertices=dat_nodes[1:3])
plot(small_graph)
small_graph
?plot(igraph)
?igraph
print.igraph(small_graph)
print_all(small_graph)
tkplot(small_graph)
# plotting a simple ring graph, all default parameters, except the layout
g <- make_ring(10)
g$layout <- layout_in_circle
plot(g)
tkplot(g)
rglplot(g)
# plotting a random graph, set the parameters in the command arguments
g <- barabasi.game(100)
plot(g, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
# plot a random graph, different color for each component
g <- sample_gnp(100, 1/100)
comps <- components(g)$membership
colbar <- rainbow(max(comps)+1)
V(g)$color <- colbar[comps+1]
plot(g, layout=layout_with_fr, vertex.size=5, vertex.label=NA)
# plot communities in a graph
g <- make_full_graph(5) %du% make_full_graph(5) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6,11))
com <- cluster_spinglass(g, spins=5)
V(g)$color <- com$membership+1
g <- set_graph_attr(g, "layout", layout_with_kk(g))
plot(g, vertex.label.dist=1.5)
# draw a bunch of trees, fix layout
igraph_options(plot.layout=layout_as_tree)
plot(make_tree(20, 2))
plot(make_tree(50, 3), vertex.size=3, vertex.label=NA)
tkplot(make_tree(50, 2, mode="undirected"), vertex.size=10,
vertex.color="green")
library(rgl)
install.packages(rgl)
install.packages("rgl")
# plotting a simple ring graph, all default parameters, except the layout
g <- make_ring(10)
g$layout <- layout_in_circle
plot(g)
tkplot(g)
rglplot(g)
# plotting a random graph, set the parameters in the command arguments
g <- barabasi.game(100)
plot(g, layout=layout_with_fr, vertex.size=4,
vertex.label.dist=0.5, vertex.color="red", edge.arrow.size=0.5)
# plot a random graph, different color for each component
g <- sample_gnp(100, 1/100)
comps <- components(g)$membership
colbar <- rainbow(max(comps)+1)
V(g)$color <- colbar[comps+1]
plot(g, layout=layout_with_fr, vertex.size=5, vertex.label=NA)
# plot communities in a graph
g <- make_full_graph(5) %du% make_full_graph(5) %du% make_full_graph(5)
g <- add_edges(g, c(1,6, 1,11, 6,11))
com <- cluster_spinglass(g, spins=5)
V(g)$color <- com$membership+1
g <- set_graph_attr(g, "layout", layout_with_kk(g))
plot(g, vertex.label.dist=1.5)
# draw a bunch of trees, fix layout
igraph_options(plot.layout=layout_as_tree)
plot(make_tree(20, 2))
plot(make_tree(50, 3), vertex.size=3, vertex.label=NA)
tkplot(make_tree(50, 2, mode="undirected"), vertex.size=10,
vertex.color="green")
plot(small_graph)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
# plot(dat_nodes[2:3],type='o',pch=20)
# plot(graph)
# plot(dat_nodes[2:3],type='o',pch=20)
# plot(graph)
# plot(dat_nodes[2:3],type='o',pch=20)
# plot(graph)
# plot(dat_nodes[2:3],type='o',pch=20)
# plot(graph)
# plot(dat_nodes[2:3],type='o',pch=20)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
graph
plot(small_graph)
# medium_graph <- graph_from_data_frame(head(dat_edges[1:2],1000))
graph <- graph_from_data_frame(dat_edges[1:2])
# test <- graph_from_data_frame(dat_edges[1:2],vertices=dat_vertices[2:3])
plot(medium_graph)
# plot(graph)
source('~/Studium/Kogni_Tuebingen/Bachelorarbeit/repository/thesis/scripts/script.R', echo=TRUE)
small_graph
plot(medium_graph)
plot(small_graph)
dat_edges
head(dat_edges)
plot(graph)
graph
small_graph <- graph_from_data_frame(head(dat_edges))
small_graph
plot(small_graph)
